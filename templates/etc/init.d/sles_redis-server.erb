#!/bin/sh

# System startup script for Redis for OpenSUSE >= 11.4
#
# Author: Marcello Barnaba <m.barnaba@ifad.org>
# Tue Jul 31 17:32:27 CEST 2012
#
# LSB-compatible service control script; see http://www.linuxbase.org/spec/
# Install it in /etc/init.d/redis and run insserv /etc/init.d/redis
# Define configurations in /etc/init.d/redis/NAME.conf
#
# Source: https://gist.github.com/804026
#
### BEGIN INIT INFO
# Provides:          redis_<%= @redis_name %>
# Required-Start:    $syslog $remote_fs
# Required-Stop:     $syslog $remote_fs
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: Redis server
# Description:       Starts and stops the configured Redis instances
### END INIT INFO

EXEC=/usr/sbin/redis-server
USER=<%= @redis_user or 'root' %>
GROUP=<%= @redis_group or 'root' %>
STATE=<%= @redis_pid_dir %>
CONF=/etc
PIDFILE=${STATE}/redis_<%= @redis_name %>.pid
CONFIG=${CONF}/redis_<%= @redis_name %>.conf

. /etc/rc.status

if [ ! -d $STATE ]; then
  install -d $state -o $USER -g $GROUP -m 0755 $STATE
fi

start() {
    echo -n "Starting Redis <%= @redis_name %> server."

    if [ ! -f ${CONFIG} ]; then
        echo "$CONFIG not found"
        rc_failed

    elif [ -f ${PIDFILE} ] && [ -x /proc/`cat ${PIDFILE}` ]; then
        echo -n "PID file detected, assuming that this instance is already running (PID `cat ${PIDFILE}`)".
    else
        rm -f ${PIDFILE}
        sudo -u $USER $EXEC $CONFIG
    fi
    rc_status -v
}

stop() {
    echo -n "Stopping Redis server."

    if [ ! -f $PIDFILE ]; then
        echo -n "not running"
    else
        PID=`cat $PIDFILE`
        CLI='/usr/bin/redis-cli'
        PASS=`grep ^requirepass $CONFIG | awk '{print $2}'`
        PORT=`grep ^port $CONFIG | awk '{print $2}'`

        CLI="$CLI -p $PORT"
        [ -n "$PASS" ] && CLI="$CLI -a $PASS"

        $CLI shutdown
        echo -n "Waiting... "

        while [ -x /proc/${PID} ]; do
            sleep 5
            /sbin/checkproc -p $PIDFILE $EXEC
        done

        rm -f ${PIDFILE}
    fi
    rc_status -v
}

status() {
    echo -n "Checking for redis."
    /sbin/checkproc -p $PIDFILE $EXEC
    rc_status -v
}


case "$1" in
    start)
        start
    ;;

    stop)
        stop
    ;;

    status)
        status
    ;;

    restart)
        $0 stop  $2
        $0 start $2
    ;;

    *)
        echo "Usage: $0 <start|stop|restart|status>"
        exit 1
    ;;
esac
